// Generated by CoffeeScript 1.3.1
(function() {
  var assert, handler, monitor, _;

  process.env.NODE_ENV = 'test';

  assert = require('assert');

  _ = require('underscore');

  monitor = (require('../lib/monitor'))({});

  handler = function(monitorConfig, config, message, object, type, done) {
    assert.equal(message, 'Test', 'Wrong message');
    assert.deepEqual(object, {}, 'Wrong object');
    return done();
  };

  suite('Log event', function() {
    test('Check if monitor logging function was executed properly for direct handler', function(done) {
      _.extend(monitor.config, monitor.config, {
        logger: {
          handler: handler
        }
      });
      return monitor.log('Test', {}, 'error', done);
    });
    test('Check if monitor logging function was executed properly for environment handler', function(done) {
      _.extend(monitor.config, monitor.config, {
        logger: {
          test: {
            handler: handler
          }
        }
      });
      return monitor.critical('Test', {}, done);
    });
    test('Check if monitor logging function was executed properly for type handler', function(done) {
      _.extend(monitor.config, monitor.config, {
        logger: {
          error: {
            handler: handler
          }
        }
      });
      return monitor.error('Test', {}, done);
    });
    test('Check if monitor logging function was executed properly for environment->type handler', function(done) {
      _.extend(monitor.config, monitor.config, {
        logger: {
          test: {
            event: {
              handler: handler
            }
          }
        }
      });
      return monitor.event('Test', {}, done);
    });
    return test('Check if monitor logging function was executed properly for environment->type default handler', function(done) {
      _.extend(monitor.config, monitor.config, {
        logger: {
          test: {
            "default": {
              handler: handler
            }
          }
        }
      });
      return monitor.debug('Test', {}, done);
    });
  });

}).call(this);
